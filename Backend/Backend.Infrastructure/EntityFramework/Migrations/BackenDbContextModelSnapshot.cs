// <auto-generated />
using System;
using Backend.Infrastructure.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(BackenDbContext))]
    partial class BackenDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Domain.Entities.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("datetime2")
                        .HasColumnName("dateOrder");

                    b.Property<decimal>("TotalBs")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("totalBs");

                    b.Property<decimal>("TotalUSD")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("totalUsd");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Order", null, t =>
                        {
                            t.HasComment("Tabla de órdenes");
                        });
                });

            modelBuilder.Entity("Backend.Domain.Entities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("exchangeRate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.Property<decimal>("PriceBs")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("priceBs");

                    b.Property<decimal>("PriceUSD")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("priceUsd");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Product", null, t =>
                        {
                            t.HasComment("Tabla de productos");
                        });
                });

            modelBuilder.Entity("Backend.Domain.Entities.ProductOrderEntity", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOrder", null, t =>
                        {
                            t.HasComment("Tabla de relación entre productos y órdenes");
                        });
                });

            modelBuilder.Entity("Backend.Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("User", null, t =>
                        {
                            t.HasComment("Tabla de usuarios");
                        });
                });

            modelBuilder.Entity("Backend.Domain.Entities.OrderEntity", b =>
                {
                    b.HasOne("Backend.Domain.Entities.UserEntity", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Order_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Domain.Entities.ProductEntity", b =>
                {
                    b.HasOne("Backend.Domain.Entities.UserEntity", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Product_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Domain.Entities.ProductOrderEntity", b =>
                {
                    b.HasOne("Backend.Domain.Entities.OrderEntity", "Order")
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductOrder_Order");

                    b.HasOne("Backend.Domain.Entities.ProductEntity", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ProductOrder_Product");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Backend.Domain.Entities.OrderEntity", b =>
                {
                    b.Navigation("ProductOrders");
                });

            modelBuilder.Entity("Backend.Domain.Entities.ProductEntity", b =>
                {
                    b.Navigation("ProductOrders");
                });

            modelBuilder.Entity("Backend.Domain.Entities.UserEntity", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
